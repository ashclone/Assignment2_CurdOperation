// <auto-generated />
using Assignment2_CurdOperation.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Assignment2_CurdOperation.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20230329114045_setHobbyDefaulNull")]
    partial class setHobbyDefaulNull
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.15")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("Assignment2_CurdOperation.Modals.Hobby", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Hobbies");

                    b.HasData(
                        new
                        {
                            Id = 7,
                            Name = "Reading"
                        },
                        new
                        {
                            Id = 8,
                            Name = "Playing"
                        },
                        new
                        {
                            Id = 9,
                            Name = "Writting"
                        },
                        new
                        {
                            Id = 10,
                            Name = "Cooking"
                        });
                });

            modelBuilder.Entity("Assignment2_CurdOperation.Modals.Student", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"), 1L, 1);

                    b.Property<string>("Address")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Age")
                        .HasColumnType("int");

                    b.Property<string>("Bio")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("Salary")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.ToTable("Students");
                });

            modelBuilder.Entity("Assignment2_CurdOperation.Modals.StudentHobby", b =>
                {
                    b.Property<int>("StudentId")
                        .HasColumnType("int");

                    b.Property<int>("HobbyId")
                        .HasColumnType("int");

                    b.HasKey("StudentId", "HobbyId");

                    b.HasIndex("HobbyId");

                    b.ToTable("StudentHobbies");
                });

            modelBuilder.Entity("Assignment2_CurdOperation.Modals.StudentHobby", b =>
                {
                    b.HasOne("Assignment2_CurdOperation.Modals.Hobby", "Hobby")
                        .WithMany("StudentHobby")
                        .HasForeignKey("HobbyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Assignment2_CurdOperation.Modals.Student", "Student")
                        .WithMany("StudentHobby")
                        .HasForeignKey("StudentId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Hobby");

                    b.Navigation("Student");
                });

            modelBuilder.Entity("Assignment2_CurdOperation.Modals.Hobby", b =>
                {
                    b.Navigation("StudentHobby");
                });

            modelBuilder.Entity("Assignment2_CurdOperation.Modals.Student", b =>
                {
                    b.Navigation("StudentHobby");
                });
#pragma warning restore 612, 618
        }
    }
}
